#!/bin/bash

#
# MIT License
#
# Copyright (c) 2022 Reiikz
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

#######################################################################
######			---------------------------------------------         #
######							ATENTION                              #
######			---------------------------------------------         #
######		THIS IS JUST A LIBRARY CONTAINGING FUNCTIONS AND SHOULD   #
######      NOT BE RAN MANUALLY 									  #
######																  #
#######################################################################

# SOURCE_URL="https://github.com/Reiikz/your-awesm"
# ERROR_REPORTING_TO="https://github.com/Reiikz/your-awesm/issues"

# provides functions related to screen handling

BASH_QOL_SCREEN_VERSION="0.0.1"

if [ ! -z "$(grep -oE "^declare\s+-A" <<< "$(declare -p $1 2> /dev/null)")" ]; then
    declare -gA BASH_QOL_LIBRARIES=( [screen]="$BASH_QOL_SCREEN_VERSION" )
else
    BASH_QOL_LIBRARIES[screen]="$BASH_QOL_SCREEN_VERSION"
fi

function killScreen {
	screen -X -S "$(isScreen "$1")" kill
}

function sendCommandToScreen {
	[ $# -ne 2 ] && echo "bad usage of sendCommand" && exit 1
	screen -S   $1 -p 0 -X stuff "$2^M"
}

function waitUntilRgexInScreen {
	if [ $# -ne 3 ] && [ $# -ne 4 ]; then
		echo "bad usage of waitUntil" && exit 1
	fi
	start=$(date "+%s")
	screen -S   $1 -p 0 -X hardcopy "/tmp/$1.screen"
	term=$(cat /tmp/$1.screen)
	while [ -z "$(grep -oE "$2" <<< $term)" ]; do
		screen -S   $1 -p 0 -X hardcopy "/tmp/$1.screen"
		term=$(cat /tmp/$1.screen)
		sleep 1
		[ ! -z $4 ] && echo -n "$4"
		if [ $(( $(date "+%s") - $start )) -ge $3 ]; then
			FAIL=true
			break
		fi
	done
	#rm /tmp/$1.screen
	[ ! -z $4 ] && echo ""
}

function isRegexInScreen {
	[ -e "/tmp/$1.screen" ] && rm -rf "/tmp/$1.screen"
	screen -S   $1 -p 0 -X hardcopy "/tmp/$1.screen"
	term=$(cat /tmp/$1.screen)
	if [ -z "$(grep -oE "$2" <<< $term)" ]; then
		return 1
	else
		return 0
	fi
}

function isLastLineInScreenRegex {
	[ -e "/tmp/$1.screen" ] && rm -rf "/tmp/$1.screen"
	screen -S   $1 -p 0 -X hardcopy "/tmp/$1.screen"
	if [ -z "$(tail -n 1 /tmp/$1.screen | grep -oE "$2")" ]; then
		return 1
	else
		return 0
	fi
}

function isScreen {
	echo -n "$(screen -ls | grep -oE "[0-9]+\.$1\s{1}" | sed -e "s/\..*$//g")"
}